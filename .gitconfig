[color]
    ui = auto
[alias]
    ; simple aliases
    aa = add --all
    all = !git add --all --verbose | sed -e 's/^add \\(.*\\)$/\\1: taken/'
    amend = commit --amend
    b = branch --list -vv
    changed-files = diff --name-only
    ci = commit
    co = checkout
    dc = diff --cached
    dh1 = diff HEAD~1
    di = diff
    ds = diff --stat=160,120
    fa = fetch --all
    ff = merge --ff-only
    last-commit = log -1 -p
    ls = ls-files
    merged = branch --merged
    noff = merge --no-ff
    p = push -u origin HEAD
    pullff = pull --ff-only
    remix = rebase -i --autosquash
    st = status
    unadd = reset HEAD
    e = experiment
    root = rev-parse --show-toplevel
    untracked = ls-files --others --exclude-standard *
    un = untracked

    ; custom commands and workflows
    absorb = "!f() { git ff $1 && git branch -d $f }; f"
    uncommit = !git reset --soft HEAD~ && git reset HEAD .
    apply-stash = "!f() { git stash apply stash@{/$*}; }; f"
    current-branch=rev-parse --abbrev-ref HEAD
    did = !git fetch && git divergence-count origin/develop
    dim = !git fetch && git divergence-count origin/master
    div = divergence
    div-count = divergence-count
    divc = divergence-count
    files = diff HEAD --name-only
    bfiles = branch-files
    branch-files = !git diff `git branched-from` --name-only
    branched-from = !git log --format="%d" | sed '/^$/d' | head -2 | tail -1 | cut -d ',' -f 1 | sed 's/^ (//'
    cfiles = commit-files
    commit-files = diff HEAD~1 --name-only
    edit-branch-commits = !git rebase -i `git outgoing master | tail -1 | xargs git log --format="%P" -1`
    fb = create-feature-branch
    gn = goodness
    gnc = goodness --cached
    h = !git head
    head = !git l -1
    hp = "!show_git_head"
    l = "!pretty_git_log"
    le = !git l --format='%n%n%Cgreen%s%Creset%n%n%n%b%n%CblueAUTHOR%x20%aN%x20<%aE>%n%H%n'
    la = !git l --all
    lae = !git l --all --format='%n%n%Cgreen%s%Creset%n%n%n%b%n%CblueAUTHOR%x20%aN%x20<%aE>%n%H%n'
    lms = !git local-master-sync-check
    r = !git l -30
    re = !git r --format='%n%n%Cgreen%s%Creset%n%n%n%b%n%CblueAUTHOR%x20%aN%x20<%aE>%n%H%n'
    ra = !git r --all
    rae = !git r --all --format='%n%n%Cgreen%s%Creset%n%n%n%b%n%CblueAUTHOR%x20%aN%x20<%aE>%n%H%n'
    recent-branches = !git reflog --since '2 weeks ago' | grep checkout | grep -o 'moving from .*' | sed -e 's/moving from //' -e 's/.* to //' | sort | uniq
    s = !git fetch && git status
    show-stash = "!f() { git stash show stash@{/$*} -p; }; f"
    snapshot = !git stash save --include-untracked "snapshot: $(date)" && git stash apply "stash@{0}"
    ss = local-to-remote-status
    wip = "!f() { git add --all && git commit -m \"✏ $*\"; }; f"
    qip = "!f() { git add --all && git commit -m \"$*\"; }; f"
    wipp = "!f() { git commit -m \"✏ $*\"; }; f"
    cdroot = !cd `git root`

    ; data analysis
    authors = !git log --format="%aN"
    email-domains = !git log --format="%aE" | awk -F'@' '{print $2}'
    emails = !git log --format="%aE"
    one-week = !git diff --stat `git log --since='1 week' --format=%H | tail -1`
    ranked-authors = !git authors | sort | uniq -c | sort -n
    ranked-email-domains = !git email-domains | sort | uniq -c | sort -n
    unique-authors = !git authors | sort -u
    unique-email-domains = !git email-domains | sort -u
    praise = blame
[merge]
    tool = vimdiff
    conflictstyle = diff3
[core]
    pager = less -r
    excludesfile = ~/.gitignore_global
[push]
    default = simple
[advice]
    statusHints = false
[diff]
    mnemonicprefix = true
    algorithm = patience
[format]
    subjectprefix = git

[rerere]
    enabled = 1
[status]
    showUntrackedFiles = all
[user]
    email = sdball@gmail.com
    name = Stephen Ball
    signingkey = 05F89257
    useConfigOnly = true
[pager]
    diff = delta
    log = delta
    reflog = delta
    show = delta
[delta]
    navigate = true
    diff-so-fancy = true
    line-numbers = true
[filter "lfs"]
    required = true
    clean = git-lfs clean -- %f
    smudge = git-lfs smudge -- %f
    process = git-lfs filter-process
[commit]
    gpgsign = false
[hub]
    host = git.corp.tanium.com
[includeIf "gitdir:~/ghe/"]
    path = ~/.gitconfig-ghe
[url "git@git.corp.tanium.com:"]
    insteadOf = https://git.corp.tanium.com/
[url "git@github.com:"]
    insteadOf = https://github.com/
[init]
    defaultBranch = main
